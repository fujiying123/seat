spring.application.name=sharding-seata-tm
spring.main.allow-bean-definition-overriding=true

spring.shardingsphere.datasource.names=m1,m2
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://192.168.74.130:3306/edu_db_1?serverTimezone=GMT%2B8&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=dahuacloud

#第二个数据源
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
#mysql8后面必须加时区
spring.shardingsphere.datasource.m2.url=jdbc:mysql://192.168.74.130:3306/edu_db_2?serverTimezone=GMT%2B8&characterEncoding=utf8&useUnicode=true&useSSL=false
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=dahuacloud

#数据库表分部情况
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m$->{1..2}.course_$->{1..2}
#表分片策略
spring.shardingsphere.sharding.tables.course.key-generator.column=id
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{id % 2 + 1}

#指定数据库的分片策略
spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=m$->{user_id % 2+1}

spring.shardingsphere.props.sql.show=true

eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=http://user:123456@${EUREKA:eureka7001.com}:7001/eureka/
#注册中心地址:

spring.cloud.alibaba.seata.tx-service-group=my_test_tx_group
#seata.enabled=true
#seata.service.enable-degrade=false
seata.service.vgroup-mapping.my_test_tx_group=default
#seata.service.disable-global-transaction=false
#数据源代理一定要设置为false，否则分布式事务失败
seata.enable-auto-data-source-proxy=false
seata.registry.eureka.application=default
seata.registry.eureka.service-url=http://user:123456@${EUREKA:eureka7001.com}:7001/eureka/
seata.registry.eureka.weight=1
